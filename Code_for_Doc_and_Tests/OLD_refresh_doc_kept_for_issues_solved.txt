"OLD V" doc on refresh 



#' Refresh a specification with constraints
#'
#' @description
#' Function allowing to create a new specification by updating a specification used for a previous estimation.
#' Some selected parameters will be kept fixed (previous estimation results) while others will be freed for re-estimation
#' in a domain of constraints. See details and examples.
#'
#' @details
#' The selection of constraints to be kept fixed or re-estimated is called a revision policy.
#' User-defined parameters are always copied to the new refreshed specifications.
#' In X-13 only the reg-arima part can be refreshed. X-11 decomposition will be completely re-run,
#' keeping all the user-defined parameters from the original specification.
#'
#' Available refresh policies are:
#'
#' \strong{Current}: Not applying the current pre-adjustment reg-arima model and adding the new raw data points as Additive Outliers (defined as new intervention variables)
#'
#' \strong{Fixed}: applying the current pre-adjustment reg-arima model and replacing forecasts by new raw data points.
#'
#' \strong{FixedParameters}: pre-adjustment reg-arima model is partially modified: regression coefficients will be re-estimated but regression variables, Arima orders
#' and coefficients are unchanged.
#'
#' \strong{FixedAutoRegressiveParameters}: same as FixedParameters but Arima Moving Average coefficients (MA) are also re-estimated, Auto-regressive (AR) coefficients are kept fixed.
#'
#' \strong{FreeParameters}: all regression and Arima model coefficients are re-estimated, regression variables and Arima orders are kept fixed.
#'
#' \strong{Outliers}: regression variables and Arima orders are kept fixed, but outliers will be re-detected on the defined span, thus all regression and Arima model coefficients are re-estimated
#'
#' \strong{Outliers_StochasticComponent}: same as "Outliers" but Arima model orders (p,d,q)(P,D,Q) can also be re-identified.
#'
#' @param spec the current specification to be refreshed (`"result_spec"`).
#' @param refspec the reference specification used to define the domain considered for re-estimation (`"domain_spec"`).
#' By default this is the `"RG5c"` or `"RSA5"` specification.
#' @param policy the refresh policy to apply (see details).
#' @param period,start,end to specify the span on which outliers will not be re-identified (i.e.: re-detected) when `policy = "Outliers"`
#' or `policy = "Outliers_StochasticComponent"`.
#' Span definition: \code{period}: numeric, number of observations in a year (12, 4...).
#' \code{start} and \code{end}: first and last date from which outliers will not be re-identfied,
#' defined as arrays of two elements: year and first period (for example, if `period = 12`, `c(1980, 1)` for January 1980).
#' If they are not specified, the outliers will be re-identified on the whole series.
#'
#' @return a new specification, an object of class `"JD3_X13_SPEC"` or
#' `"JD3_REGARIMA_SPEC"`.
#'
#' @references
#' More information on revision policies in JDemetra+ online documentation:
#' \url{https://jdemetra-new-documentation.netlify.app/t-rev-policies-production}
#'
#' @examples
#'y<- rjd3toolkit::ABS$X0.2.08.10.M
#'# raw series for first estimation
#'y_raw <-window(y,end = 2009)
#'# raw series for second (refreshed) estimation
#'y_new <-window(y,end = 2010)
#'# specification for first estimation
#'spec_x13_1<-x13_spec("rsa5c")
#'# first estimation
#'sa_x13<- x13(y_raw, spec_x13_1)
#' # refreshing the specification
#' current_result_spec <- sa_x13$result_spec
#' current_domain_spec <- sa_x13$estimation_spec
#' spec_x13_ref <- x13_refresh(current_result_spec, # point spec to be refreshed
#'   current_domain_spec, #domain spec (set of constraints)
#'   policy = "Fixed")
#' # 2nd estimation with refreshed specification
#' sa_x13_ref <- x13(y_new, spec_x13_ref)
